plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.10'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}
def reactDir = "$projectDir/src/main/reactfront";

sourceSets{
    main{
        resources{
            srcDirs = ["$projectDir/src/main/resources/"]
        }
    }
}

processResources{
    dependsOn "copyReactBuildFiles"
}

task installReact(type:Exec){
    workingDir "$reactDir"
    inputs.dir "$reactDir"
    group = BasePlugin.BUILD_GROUP

    if(System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')){
        commandLine "npm.cmd", "audit", "fix"
        commandLine 'npm.cmd', 'install'
    }else{
        commandLine "npm", "audit", "fix"
        commandLine 'npm', 'install'
    }
}

task buildReact(type:Exec){
    dependsOn "installReact"
    workingDir "$reactDir"
    inputs.dir "$reactDir"
    group = BasePlugin.BUILD_GROUP

    if(System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')){
        commandLine "npm.cmd", "run-script", "build"
    }else{
        commandLine "npm", "run-script", "build"
    }
}

task copyReactBuildFiles(type:Copy){
    dependsOn "buildReact"
    from "$reactDir/build"
    into "$projectDir/src/main/resources/static"
}


group = 'com.in4mation'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compileOnly 'org.springframework.boot:spring-boot-devtools'

    // database
    runtimeOnly 'com.mysql:mysql-connector-j'

    // ORM 우리는 Mybatis로 간다!!!
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.3'

    // lombok
    implementation 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok'

    //tomcat
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'

    //JSON
    implementation 'org.json:json:20230227'

    //시큐리티
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'com.google.code.gson:gson:2.8.9'


    // jjwt 라이브러리 추가
    implementation 'io.jsonwebtoken:jjwt:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2' // Jackson을 이용하여 JSON을 처리하기 위해 추가

    testImplementation 'org.springframework.security:spring-security-test'



}

tasks.named('test') {
    useJUnitPlatform()
}
